version: '3.4'

volumes:
  postgres_data:
      driver: local

services:
  postgres:
      image: postgres
      container_name: postgres
      restart: unless-stopped
      networks:
        - keycloak
      volumes:
        - postgres_data:/var/lib/postgresql/data
      environment:
        LOG_MIN_MASSAGES: INFO
        POSTGRES_DB: keycloak
        POSTGRES_USER: ${DB_USER}
        POSTGRES_PASSWORD: ${DB_PASSWORD}
        POSTGRES_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      labels:
        - "traefik.enable=false"

  keycloak:
      image: jboss/keycloak
      container_name: keycloak
      restart: unless-stopped
      domainname: ${DOMAINNAME}
      environment:
        - "PUID=1000"
        - "PGID=1000"
        - "DB_VENDOR=POSTGRES"
        - "DB_ADDR=postgres"
        - "DB_DATABASE=keycloak"
        - "DB_USER=${DB_USER}"
        - "DB_SCHEMA=public"
        - "DB_PASSWORD=${DB_PASSWORD}"
        - "PROXY_ADDRESS_FORWARDING=true"
        - "KEYCLOAK_LOGLEVEL=WARNING"
        - "KEYCLOAK_USER=${KEYCLOAK_USER}"
        - "KEYCLOAK_PASSWORD=${KEYCLOAK_PASSWORD}"
        - "KEYCLOAK_HOSTNAME=keycloak.${DOMAINNAME}"
        - "POSTGRES_USER=${DB_USER}"
        - "POSTGRES_PASSWORD=${DB_PASSWORD}"
      networks:
        - web
        - keycloak
      labels:
        traefik.backend: keycloak
        traefik.enable: 'true'
        traefik.http.routers.keycloak.rule: "Host(`keycloak.${DOMAINNAME}`)"
        traefik.http.routers.keycloak.entrypoints: https
        traefik.http.routers.keycloak.middlewares: default-https
        traefik.http.routers.keycloak.tls.certResolver: 'default'
        traefik.http.services.keycloak.loadbalancer.server.port: '8080'
        traefik.docker.network: web
      depends_on:
        - postgres
      command: ["-b", "0.0.0.0", "-Dkeycloak.profile.feature.docker=enabled"]

networks:
  keycloak:
    name: keycloak
    driver: bridge
  web:
    external: true
